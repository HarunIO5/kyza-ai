// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                        String                 @id @default(cuid())
  name                      String?                @unique
  email                     String?                @unique
  hashedPassword            String?
  emailVerified             DateTime?
  image                     String?
  freeCredits               Int                    @default(3)
  credits                   Int                    @default(0)
  forgotPasswordToken       String?                @unique
  forgotPasswordTokenExpiry DateTime?
  verifyToken               String?                @unique
  verifyTokenExpiry         DateTime?
  accounts                  Account[]
  sessions                  Session[]
  OneTimePurchases          OneTimePurchases[]
  UserSavedGenerations      UserSavedGenerations[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model SearchableVideos {
  id            String  @id @default(cuid())
  key           String? @unique
  prompt        String
  model         String?
  url           String
  fileSizeBytes Int?
}

model LandingPageVideos {
  id            String  @id @default(cuid())
  key           String?
  prompt        String
  url           String
  fileSizeBytes Int?
}

model OneTimePurchases {
  id          String   @id @default(cuid())
  productType String
  credits     Int?
  createdAt   DateTime @default(now())
  products    Json?
  status      String   @default("Pending")
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model UserSavedGenerations {
  id             String   @id @default(cuid())
  productType    String
  model          String?
  prompt         String
  style          String?
  negativePrompt String?
  scale          String?
  createdAt      DateTime @default(now())
  url            String?
  userId         String
  user           User     @relation(fields: [userId], references: [id])
}
